version: '3.8'
services:

  cargo:
    image: ghcr.io/harrison-ai/rust:1.75-1
    entrypoint: cargo
    volumes:
      - '~/.cargo/registry:/usr/local/cargo/registry'
      - '.:/app'
    working_dir: '/app'
    environment:
      - LOCALSTACK_HOSTNAME=localstack
      - AWS_DEFAULT_REGION=ap-southeast-2
      - AWS_ACCESS_KEY_ID=placeholder
      - AWS_SECRET_ACCESS_KEY=placeholder
    depends_on:
      localstack:
        condition: service_healthy

  awslocal:
    build:
      context: scripts
      dockerfile: Dockerfile-awslocal
    entrypoint: awslocal
    volumes:
      - '.:/app'
    working_dir: '/app'
    environment:
      - LOCALSTACK_HOST=localstack
      - AWS_DEFAULT_REGION=ap-southeast-2
      - AWS_ACCESS_KEY_ID=placeholder
      - AWS_SECRET_ACCESS_KEY=placeholder
    depends_on:
      - localstack

  localstack:
    image: localstack/localstack:1.4.0
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
      - "127.0.0.1:53:53"                # DNS config (only required for Pro)
      - "127.0.0.1:53:53/udp"            # DNS config (only required for Pro)
      - "127.0.0.1:443:443"              # LocalStack HTTPS Gateway (only required for Pro)
    environment:
      - DEBUG=${DEBUG-}
      - PERSISTENCE=${PERSISTENCE-}
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-}
      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY-}  # only required for Pro
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=ap-southeast-2
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./scripts/init-localstack.sh:/docker-entrypoint-initaws.d/init-localstack.sh"
      - "./test-data:/tmp/test-data"
    healthcheck:
      test:
        - CMD
        - bash
        - -c
        - awslocal s3 ls
      interval: 2s
      timeout: 10s
      start_period: 5s
